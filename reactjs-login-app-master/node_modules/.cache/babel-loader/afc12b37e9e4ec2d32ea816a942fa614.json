{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\html\\\\React.js-and-Vue.js\\\\reactjs-login-app-master\\\\src\\\\LoginForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Form, FormGroup, Input } from \"reactstrap\";\nimport { Redirect } from 'react-router-dom';\nimport './api/index';\nimport Axios from \"axios\";\n\nconst LoginForm = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const submit = e => {\n    e.preventDefault();\n    console.log(username, password);\n    let patternPassword = new RegExp(\"^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$\");\n    let patternUsername = new RegExp(\"^[a-zA-Z0-9](_(?!(\\.|_))|\\.(?!(_|\\.))|[a-zA-Z0-9]){6,18}[a-zA-Z0-9]$\");\n\n    if (patternPassword.test(username) && patternUsername.test(username)) {\n      const params = JSON.stringify({\n        \"username\": username,\n        \"password\": password\n      });\n      const url = 'http://localhost:3001/login';\n      const url1 = 'https://jsonplaceholder.typicode.com/todos';\n      Axios.post('', params).then(response => {\n        console.log(response);\n\n        if (response) {\n          alert(\"Success!\");\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 22\n          }, this);\n        } else {\n          alert(\"Failed!\");\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      console.log('password or username is incorect');\n    } // fetch(\"http://localhost:3001/login\", {\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   method: \"POST\",\n    //   body: JSON.stringify({\n    //     username: username,\n    //     password: password,\n    //   }),\n    // }).then((response) => {\n    //   if (response.ok) {\n    //     alert(\"Success!\");\n    //   } else {\n    //     alert(\"Failed!\");\n    //   }\n    // });\n\n  };\n\n  const style = {\n    width: '20%',\n    margin: '0 auto',\n    height: '100vh'\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"form align-middle d-flex flex-column justify-content-center\",\n    onSubmit: submit,\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value) // pattern={}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["D:/html/React.js-and-Vue.js/reactjs-login-app-master/src/LoginForm.tsx"],"names":["React","useState","Button","Form","FormGroup","Input","Redirect","Axios","LoginForm","username","setUsername","password","setPassword","submit","e","preventDefault","console","log","patternPassword","RegExp","patternUsername","test","params","JSON","stringify","url","url1","post","then","response","alert","catch","err","style","width","margin","height","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAyCC,KAAzC,QAAgE,YAAhE;AAEA,SAAUC,QAAV,QAA0B,kBAA1B;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;;AAMA,QAAMY,MAAM,GAAIC,CAAD,IAAyC;AACtDA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ,EAAsBE,QAAtB;AACA,QAAIO,eAAe,GAAG,IAAIC,MAAJ,CAAW,gEAAX,CAAtB;AACA,QAAIC,eAAe,GAAG,IAAID,MAAJ,CAAW,sEAAX,CAAtB;;AACA,QAAGD,eAAe,CAACG,IAAhB,CAAqBZ,QAArB,KAAkCW,eAAe,CAACC,IAAhB,CAAqBZ,QAArB,CAArC,EAAoE;AAElE,YAAMa,MAAM,GAAGC,IAAI,CAACC,SAAL,CAAe;AAE5B,oBAAYf,QAFgB;AAI5B,oBAAYE;AAJgB,OAAf,CAAf;AAOE,YAAMc,GAAG,GAAG,6BAAZ;AACA,YAAMC,IAAI,GAAG,4CAAb;AAIFnB,MAAAA,KAAK,CAACoB,IAAN,CAAW,EAAX,EAAcL,MAAd,EAAsBM,IAAtB,CAA4BC,QAAD,IAAc;AACvCb,QAAAA,OAAO,CAACC,GAAR,CAAYY,QAAZ;;AACE,YAAIA,QAAJ,EAAc;AACVC,UAAAA,KAAK,CAAC,UAAD,CAAL;AAEA,8BAAO,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAJD,MAIO;AACHA,UAAAA,KAAK,CAAC,SAAD,CAAL;AACH;AACJ,OATD,EASGC,KATH,CASSC,GAAG,IAAE;AACZhB,QAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACD,OAXD;AAaD,KA3BD,MA4BI;AACFhB,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACD,KAnCqD,CAwCtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGD,GA1DD;;AA4DA,QAAMgB,KAAK,GAAC;AACVC,IAAAA,KAAK,EAAC,KADI;AAEVC,IAAAA,MAAM,EAAC,QAFG;AAGVC,IAAAA,MAAM,EAAC;AAHG,GAAZ;AAKA,sBAEE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,6DAAhB;AAA8E,IAAA,QAAQ,EAAEvB,MAAxF;AAAgG,IAAA,KAAK,EAAEoB,KAAvG;AAAA,4BACE,QAAC,SAAD;AAAA,6BACE,QAAC,KAAD;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,UAHd;AAIE,QAAA,KAAK,EAAExB,QAJT;AAKE,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,WAAW,CAACI,CAAC,CAACuB,MAAF,CAASC,KAAV,CAL9B,CAME;;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,SAAD;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,WAAW,EAAC,UAFd;AAGE,QAAA,KAAK,EAAE3B,QAHT;AAIE,QAAA,QAAQ,EAAGG,CAAD,IAAMF,WAAW,CAACE,CAAC,CAACuB,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF,eAqBE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AA2BD,CApGD;;GAAM9B,S;;KAAAA,S;AAsGN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport  { Redirect } from 'react-router-dom'\nimport './api/index';\nimport Axios from \"axios\";\n\n\n\nconst LoginForm = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  \n\n\n\n  const submit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    console.log(username, password)\n    let patternPassword = new RegExp(\"^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$\");\n    let patternUsername = new RegExp(\"^[a-zA-Z0-9](_(?!(\\.|_))|\\.(?!(_|\\.))|[a-zA-Z0-9]){6,18}[a-zA-Z0-9]$\");\n    if(patternPassword.test(username) && patternUsername.test(username)){\n\n      const params = JSON.stringify({\n\n        \"username\": username,\n        \n        \"password\": password,\n        \n        });\n        const url = 'http://localhost:3001/login'\n        const url1 = 'https://jsonplaceholder.typicode.com/todos'\n  \n        \n       \n      Axios.post('',params).then((response) => {\n        console.log(response)\n          if (response) {\n              alert(\"Success!\");\n\n              return <Redirect to='/home'  />\n          } else {\n              alert(\"Failed!\");\n          }\n      }).catch(err=>{\n        console.log(err)\n      })\n      \n    }\n    else{\n      console.log('password or username is incorect')\n    }\n    \n\n   \n\n    // fetch(\"http://localhost:3001/login\", {\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   method: \"POST\",\n    //   body: JSON.stringify({\n    //     username: username,\n    //     password: password,\n    //   }),\n    // }).then((response) => {\n    //   if (response.ok) {\n    //     alert(\"Success!\");\n    //   } else {\n    //     alert(\"Failed!\");\n    //   }\n    // });\n\n  \n  };\n\n  const style={\n    width:'20%',\n    margin:'0 auto',\n    height:'100vh'\n  }\n  return (\n    \n    <Form className=\"form align-middle d-flex flex-column justify-content-center\" onSubmit={submit} style={style}>\n      <FormGroup>\n        <Input\n        \n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          // pattern={}\n        />\n      </FormGroup>\n      <FormGroup>\n        <Input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e)=> setPassword(e.target.value)}\n          \n        />\n      </FormGroup>\n\n      <Button type=\"submit\">Sign in</Button>\n    </Form>\n    \n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}