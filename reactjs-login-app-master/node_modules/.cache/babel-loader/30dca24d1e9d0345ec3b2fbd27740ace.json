{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\html\\\\React.js-and-Vue.js\\\\reactjs-login-app-master\\\\src\\\\LoginForm.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Form, FormGroup, Input } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./api/index\";\nimport Axios from \"axios\";\n\nconst LoginForm = props => {\n  _s2();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [par, setPar] = useState(false);\n\n  const submit = e => {\n    e.preventDefault();\n    console.log(username, password);\n    let patternPassword = new RegExp(\"^[a-z0-9_-]{3,16}$\");\n    let patternUsername = new RegExp(\"^[a-z0-9_-]{3,16}$\");\n    console.log(patternPassword.test(username), patternUsername.test(username));\n\n    if (patternPassword.test(password) && patternUsername.test(username)) {\n      var _s = $RefreshSig$();\n\n      const params = JSON.stringify({\n        username: username,\n        password: password\n      });\n      const url = \"http://localhost:3001/login\";\n      const url1 = \"https://jsonplaceholder.typicode.com/todos\";\n      Axios.post(\"\", params).then(_s(response => {\n        _s();\n\n        console.log(response);\n\n        if (response) {\n          alert(\"Success!\");\n          useHistory().push('/');\n          setPar(true);\n        } else {\n          alert(\"Failed!\");\n        }\n      }, \"ebO9cvF3Ou0GZnyLIaifBK5vWck=\", false, function () {\n        return [useHistory];\n      })).catch(err => {\n        console.log(err);\n      });\n    } else {\n      console.log(\"password or username is incorect\");\n    }\n  };\n\n  const style = {\n    width: \"20%\",\n    margin: \"0 auto\",\n    height: \"100vh\"\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"form align-middle d-flex flex-column justify-content-center\",\n    onSubmit: submit,\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value) // pattern={}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(LoginForm, \"kjIgTXZfSaifH/KMcKFzWrm9yNc=\");\n\n_c = LoginForm;\nexport default LoginForm; // fetch(\"http://localhost:3001/login\", {\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//   },\n//   method: \"POST\",\n//   body: JSON.stringify({\n//     username: username,\n//     password: password,\n//   }),\n// }).then((response) => {\n//   if (response.ok) {\n//     alert(\"Success!\");\n//   } else {\n//     alert(\"Failed!\");\n//   }\n// });\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["D:/html/React.js-and-Vue.js/reactjs-login-app-master/src/LoginForm.tsx"],"names":["React","useState","Button","Form","FormGroup","Input","useHistory","Axios","LoginForm","props","username","setUsername","password","setPassword","par","setPar","submit","e","preventDefault","console","log","patternPassword","RegExp","patternUsername","test","params","JSON","stringify","url","url1","post","then","response","alert","push","catch","err","style","width","margin","height","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./api/index\";\nimport Axios from \"axios\";\ninterface props {\n  onClick: Function;\n}\nconst LoginForm = (props:props ) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [par, setPar] = useState(false);\n\n  const submit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    console.log(username, password);\n    let patternPassword = new RegExp(\"^[a-z0-9_-]{3,16}$\");\n    let patternUsername = new RegExp(\"^[a-z0-9_-]{3,16}$\");\n    console.log(patternPassword.test(username), patternUsername.test(username));\n    if (patternPassword.test(password) && patternUsername.test(username)) {\n      const params = JSON.stringify({\n        username: username,\n\n        password: password,\n      });\n      const url = \"http://localhost:3001/login\";\n      const url1 = \"https://jsonplaceholder.typicode.com/todos\";\n\n          Axios.post(\"\", params)\n            .then((response) => {\n              console.log(response);\n              if (response) {\n                alert(\"Success!\");\n              \n                useHistory().push('/')\n              \n                setPar(true);\n              } else {\n                alert(\"Failed!\");\n              }\n              \n            })\n            .catch((err) => {\n              console.log(err);\n            });\n\n\n      \n\n        } else {\n          console.log(\"password or username is incorect\");\n        }\n  };\n\n  \n\n  const style = {\n    width: \"20%\",\n    margin: \"0 auto\",\n    height: \"100vh\",\n  };\n  return (\n    <Form\n      className=\"form align-middle d-flex flex-column justify-content-center\"\n      onSubmit={submit}\n      style={style}\n    >\n      <FormGroup>\n        <Input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          // pattern={}\n        />\n      </FormGroup>\n      <FormGroup>\n        <Input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </FormGroup>\n\n      <Button type=\"submit\">Sign in</Button>\n    </Form>\n  );\n};\n\nexport default LoginForm;\n\n// fetch(\"http://localhost:3001/login\", {\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//   },\n//   method: \"POST\",\n//   body: JSON.stringify({\n//     username: username,\n//     password: password,\n//   }),\n// }).then((response) => {\n//   if (response.ok) {\n//     alert(\"Success!\");\n//   } else {\n//     alert(\"Failed!\");\n//   }\n// });\n"]},"metadata":{},"sourceType":"module"}